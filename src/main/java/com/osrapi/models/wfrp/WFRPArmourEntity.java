package com.osrapi.models.wfrp;

import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * @author drau
 */
@JsonInclude(JsonInclude.Include.NON_EMPTY)
@Entity
@Table(name = "armour", schema = "wfrp")
public final class WFRPArmourEntity {
    /** the ap. */
    @Column(name = "ap")
    @JsonProperty("ap")
    @NotNull
    private long ap;
    /**
     * the list of {@link WFRPArmourCoverageEntity}s associated with this
     * {@link WFRPArmourEntity}.
     */
    @OneToMany(targetEntity = WFRPArmourCoverageEntity.class,
            fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinTable(name = "armour_coverage_lookup", schema = "wfrp",
            joinColumns = @JoinColumn(name = "armour_id",
                    referencedColumnName = "armour_id"),
            inverseJoinColumns = @JoinColumn(name = "armour_coverage_id",
                    referencedColumnName = "armour_coverage_id"))
    @JsonProperty("coverage")
    private List<WFRPArmourCoverageEntity> coverage;
    /**
     * the primary key - an autogenerated id (unique for each user in the db).
     */
    @Id
    @Column(name = "armour_id")
    @GeneratedValue(strategy = GenerationType.SEQUENCE,
            generator = "armour_seq")
    @SequenceGenerator(name = "armour_seq", sequenceName = "wfrp.armour_id_seq",
            allocationSize = 1)
    private Long id;
    /** the name. */
    @Column(name = "name")
    @JsonProperty("name")
    @NotNull
    private String name;

    /** the type. */
    @Cascade({ CascadeType.ALL })
    @JsonProperty("type")
    @ManyToOne(optional = false, fetch = FetchType.LAZY)
    @NotNull
    private WFRPArmourTypeEntity type;
    /** Creates a new instance of {@link WFRPArmourEntity}. */
    public WFRPArmourEntity() {
        super();
    }
    /**
     * Gets the ap.
     * @return {@link long}
     */
    public long getAp() {
        return ap;
    }

    /**
     * Gets the list of coverages.
     * @return {@link List}<{@link WFRPArmourCoverageEntity}>
     */
    public List<WFRPArmourCoverageEntity> getCoverage() {
        return coverage;
    }
    /**
     * Gets the id.
     * @return {@link Long}
     */
    public Long getId() {
        return id;
    }
    /**
     * Gets the name.
     * @return {@link String}
     */
    public String getName() {
        return name;
    }

    /**
     * Gets the type.
     * @return {@link WFRPArmourTypeEntity}
     */
    public WFRPArmourTypeEntity getType() {
        return type;
    }
    /**
     * Sets the ap.
     * @param val the new value
     */
    public void setAp(final long val) {
        ap = val;
    }
    /**
     * Sets the list of coverages.
     * @param val the new value
     */
    public void setCoverage(final List<WFRPArmourCoverageEntity> val) {
        coverage = val;
    }

    /**
     * Sets the id.
     * @param val the new value
     */
    public void setId(final Long val) {
        id = val;
    }
    /**
     * Sets the name.
     * @param val the new value
     */
    public void setName(final String val) {
        name = val;
    }
    /**
     * Sets the type.
     * @param val the new value
     */
    public void setType(final WFRPArmourTypeEntity val) {
        type = val;
    }

}
