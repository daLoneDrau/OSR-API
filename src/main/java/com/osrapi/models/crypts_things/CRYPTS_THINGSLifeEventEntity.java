package com.osrapi.models.crypts_things;

import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * @author drau
 */
@JsonInclude(JsonInclude.Include.NON_EMPTY)
@Entity
@Table(name = "life_event", schema = "crypts_things")
public final class CRYPTS_THINGSLifeEventEntity {
    /** the description. */
    @Column(name = "description")
    @JsonProperty("description")
    @NotNull
    private String description;
    /**
     * the primary key - an autogenerated id (unique for each user in the db).
     */
    @Id
    @Column(name = "life_event_id")
    @GeneratedValue(strategy = GenerationType.SEQUENCE,
            generator = "life_event_seq")
    @SequenceGenerator(
            name = "life_event_seq",
            sequenceName = "crypts_things.life_event_id_seq",
            allocationSize = 1)
    private Long id;
    /**
     * the list of {@link CRYPTS_THINGSEquipmentItemModifierEntity}s associated
     * with this {@link CRYPTS_THINGSLifeEventEntity}.
     */
    @OneToMany(targetEntity = CRYPTS_THINGSEquipmentItemModifierEntity.class,
            fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinTable(name = "life_event_modifiers_lookup", schema = "crypts_things",
            joinColumns = @JoinColumn(name = "life_event_id",
                    referencedColumnName = "life_event_id"),
            inverseJoinColumns = @JoinColumn(
                    name = "equipment_item_modifier_id",
                    referencedColumnName = "equipment_item_modifier_id"))
    @JsonProperty("modifiers")
    private List<CRYPTS_THINGSEquipmentItemModifierEntity> modifiers;
    /** the name. */
    @Column(name = "name")
    @JsonProperty("name")
    @NotNull
    private String name;

    /** Creates a new instance of {@link CRYPTS_THINGSLifeEventEntity}. */
    public CRYPTS_THINGSLifeEventEntity() {
        super();
    }
    /**
     * Gets the description.
     * @return {@link String}
     */
    public String getDescription() {
        return description;
    }
    /**
     * Gets the id.
     * @return {@link Long}
     */
    public Long getId() {
        return id;
    }

    /**
     * Gets the list of modifierss.
     * @return {@link List}<{@link CRYPTS_THINGSEquipmentItemModifierEntity}>
     */
    public List<CRYPTS_THINGSEquipmentItemModifierEntity> getModifiers() {
        return modifiers;
    }
    /**
     * Gets the name.
     * @return {@link String}
     */
    public String getName() {
        return name;
    }
    /**
     * Sets the description.
     * @param val the new value
     */
    public void setDescription(final String val) {
        description = val;
    }

    /**
     * Sets the id.
     * @param val the new value
     */
    public void setId(final Long val) {
        id = val;
    }
    /**
     * Sets the list of modifierss.
     * @param val the new value
     */
    public void setModifiers(
            final List<CRYPTS_THINGSEquipmentItemModifierEntity> val) {
        modifiers = val;
    }
    /**
     * Sets the name.
     * @param val the new value
     */
    public void setName(final String val) {
        name = val;
    }

}
