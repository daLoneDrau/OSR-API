package com.osrapi.models.lablord;

import java.util.List;
import java.util.Map;

import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.MapKeyColumn;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * @author drau
 */
@JsonInclude(JsonInclude.Include.NON_EMPTY)
@Entity
@Table(name = "equipment", schema = "lablord")
public final class LABLORDEquipmentEntity {
    /** the armorData. */
    @Cascade({ CascadeType.ALL })
    @JsonProperty("armor_data")
    @ManyToOne(optional = false, fetch = FetchType.LAZY)

    private LABLORDArmorEntity armorData;
    @ElementCollection
    @CollectionTable(name = "equipment_cost_lookup", schema = "lablord",
            joinColumns = @JoinColumn(name = "equipment_id"))
    @MapKeyColumn(name = "key")
    @Column(name = "value")
    @JsonProperty("cost")
    private Map<String, Integer> cost;
    /** the description. */
    @Column(name = "description")
    @JsonProperty("description")
    @NotNull
    private String description;
    /**
     * the primary key - an autogenerated id (unique for each user in the db).
     */
    @Id
    @Column(name = "equipment_id")
    @GeneratedValue(strategy = GenerationType.SEQUENCE,
            generator = "equipment_seq")
    @SequenceGenerator(name = "equipment_seq",
            sequenceName = "lablord.equipment_id_seq", allocationSize = 1)
    private Long id;

    /** the name. */
    @Column(name = "name")
    @JsonProperty("name")
    @NotNull
    private String name;
    /**
     * the list of {@link LABLORDEquipmentTypeEntity}s associated with this
     * {@link LABLORDEquipmentEntity}.
     */
    @OneToMany(targetEntity = LABLORDEquipmentTypeEntity.class,
            fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinTable(name = "equipment_type_lookup", schema = "lablord",
            joinColumns = @JoinColumn(name = "equipment_id",
                    referencedColumnName = "equipment_id"),
            inverseJoinColumns = @JoinColumn(name = "equipment_type_id",
                    referencedColumnName = "equipment_type_id"))
    @JsonProperty("type")
    private List<LABLORDEquipmentTypeEntity> type;
    /** the weaponData. */
    @Cascade({ CascadeType.ALL })
    @JsonProperty("weapon_data")
    @ManyToOne(optional = false, fetch = FetchType.LAZY)

    private LABLORDWeaponDataEntity weaponData;

    /** the weight. */
    @Column(name = "weight")
    @JsonProperty("weight")
    @NotNull
    private float weight;
    /** Creates a new instance of {@link LABLORDEquipmentEntity}. */
    public LABLORDEquipmentEntity() {
        super();
    }
    /**
     * Gets the armorData.
     * @return {@link LABLORDArmorEntity}
     */
    public LABLORDArmorEntity getArmorData() {
        return armorData;
    }

    /**
     * Gets the map of costs.
     * @return {@link Map}<{@link String}, {@link Integer}>
     */
    public Map<String, Integer> getCost() {
        return cost;
    }
    /**
     * Gets the description.
     * @return {@link String}
     */
    public String getDescription() {
        return description;
    }
    /**
     * Gets the id.
     * @return {@link Long}
     */
    public Long getId() {
        return id;
    }

    /**
     * Gets the name.
     * @return {@link String}
     */
    public String getName() {
        return name;
    }
    /**
     * Gets the list of types.
     * @return {@link List}<{@link LABLORDEquipmentTypeEntity}>
     */
    public List<LABLORDEquipmentTypeEntity> getType() {
        return type;
    }
    /**
     * Gets the weaponData.
     * @return {@link LABLORDWeaponDataEntity}
     */
    public LABLORDWeaponDataEntity getWeaponData() {
        return weaponData;
    }

    /**
     * Gets the weight.
     * @return {@link float}
     */
    public float getWeight() {
        return weight;
    }
    /**
     * Sets the armorData.
     * @param val the new value
     */
    public void setArmorData(final LABLORDArmorEntity val) {
        armorData = val;
    }
    /**
     * Sets the mapping for costs.
     * @param val the new value
     */
    public void setCost(final Map<String, Integer> val) {
        cost = val;
    }

    /**
     * Sets the description.
     * @param val the new value
     */
    public void setDescription(final String val) {
        description = val;
    }
    /**
     * Sets the id.
     * @param val the new value
     */
    public void setId(final Long val) {
        id = val;
    }
    /**
     * Sets the name.
     * @param val the new value
     */
    public void setName(final String val) {
        name = val;
    }

    /**
     * Sets the list of types.
     * @param val the new value
     */
    public void setType(final List<LABLORDEquipmentTypeEntity> val) {
        type = val;
    }
    /**
     * Sets the weaponData.
     * @param val the new value
     */
    public void setWeaponData(final LABLORDWeaponDataEntity val) {
        weaponData = val;
    }
    /**
     * Sets the weight.
     * @param val the new value
     */
    public void setWeight(final float val) {
        weight = val;
    }

}
